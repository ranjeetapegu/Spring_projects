<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ranjeeta.demo</groupId>
	<artifactId>ranjeeta_Spring</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>ranjeeta_srping</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>com.ibm.db2</groupId> -->
		<!-- <artifactId>db2jcc</artifactId> -->
		<!-- <version>11.1.1</version> -->
		<!-- <scope>system</scope> -->
		<!-- <systemPath>/Users/rakesh.jamla@ibm.com/Documents/DB_Jar/db2jcc4.jar</systemPath> -->
		<!-- </dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.ibm</groupId> -->
<!-- 			<artifactId>db2jcc4</artifactId> -->
<!-- 			<version>4.19.72</version> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>net.wasdev.wlp.maven.plugins</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>create-server</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>create-server</goal>
						</goals>
					</execution>
					<execution>
						<id>install-feature</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>install-feature</goal>
						</goals>
						<configuration>
							<features>
								<acceptLicense>true</acceptLicense>
								<feature>springBoot-2.0</feature>
								<feature>servlet-3.1</feature>
							</features>
						</configuration>
					</execution>

					<execution>
						<id>install-apps</id>
						<phase>package</phase>
						<goals>
							<goal>install-apps</goal>
						</goals>
						<configuration>
							<appsDirectory>apps</appsDirectory>
							<!--<stripVersion>true</stripVersion> -->
							<!-- <installAppPackages>spring-boot-project</installAppPackages> -->
							<installAppPackages>all</installAppPackages>
						</configuration>
					</execution>
					<execution>
						<id>package-server</id>
						<phase>package</phase>
						<goals>
							<goal>package-server</goal>
						</goals>
						<configuration>
							<packageFile>${project.build.directory}/${project.build.finalName}-wlp.jar</packageFile>
							<include>minify,runnable</include>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<assemblyArtifact>
						<groupId>com.ibm.websphere.appserver.runtime</groupId>
						<artifactId>wlp-kernel</artifactId>
						<version>18.0.0.2</version>
						<type>zip</type>
					</assemblyArtifact>
					<configFile>src/main/wlp/server.xml</configFile>
					<bootstrapProperties>
						<httpPort>10080</httpPort>
						<appLocation>${project.build.finalName}</appLocation>
					</bootstrapProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>false</filtering>
									<!-- NEVER USE filtering=true for binary files -->
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>